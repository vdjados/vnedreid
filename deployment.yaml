apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend  
  labels:
    app: backend  
spec:
  replicas: 3  
  selector:
    matchLabels:
      app: backend  
  template:  
    metadata:
      labels:
        app: backend  
    spec:
      containers:
      - name: backend
        image: stayfatal/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "100m"    
            memory: "128Mi" 
          limits:
            cpu: "500m"    
            memory: "512Mi" 

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml 
  labels:
    app: ml  
spec:
  replicas: 3  
  selector:
    matchLabels:
      app: ml
  template:  
    metadata:
      labels:
        app: ml  
    spec:
      containers:
      - name: ml
        image: stayfatal/ml:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "100m"    
            memory: "128Mi" 
          limits:
            cpu: "500m"    
            memory: "512Mi" 

---
apiVersion: v1
kind: Service
metadata:
  name: ml-service  # Название сервиса
spec:
  selector:
    app: ml  # Должен совпадать с лейблом Pod'ов из Deployment
  ports:
    - protocol: TCP
      port: 80       # Порт, на котором Service принимает запросы
      targetPort: 8080  # Порт контейнера (как в Pod'ах)

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service  # Название сервиса
spec:
  selector:
    app: backend  # Должен совпадать с лейблом Pod'ов из Deployment
  ports:
    - protocol: TCP
      port: 80       # Порт, на котором Service принимает запросы
      targetPort: 8080  # Порт контейнера (как в Pod'ах)